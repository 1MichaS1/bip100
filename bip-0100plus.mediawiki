<pre>
  BIP: 100+
  Title: Floating block size hard limit with a default growth rate >0% 
  Author: Jeff Garzik <jgarzik@gmail.com>, Michael_S of bitcointalk.org
  Status: Draft
  Type: Standards Track
  Created: 2015-06-11, default growth rate added 2015-09-08
</pre>

==Abstract==

Replace static 1M block size hard limit with a hard limit that floats between 1M and 32M.

==Motivation==

# Long term, wean the bitcoin protocol away from any block size limit; let the free market establish a natural size limit equilibrium.
# Eliminate 1M limit as impediment to adoption.
# Execute a hard fork network upgrade within safety rails, gathering data and experience for future upgrades.
# Contain checks-and-balances that users must opt into, to enable system activation and growth.
# Default growth rate of +1.09% per 2 weeks = +32.5% p.a. = +100% per 2.5 years, to account for technological progress in internet bandwidth and storage costs. In the presence of too many undecided/passive miners, the system should at least partly grow along with technological advances, to avoid a deadlock and a change of the system to the worse. Note that actual long-term growth of internet bandwidth is more in the area of 50% p.a. acc. to [http://www.nngroup.com/articles/law-of-bandwidth Nielssen's law of internet bandwidth]
# Validated growth: a safe / large majority (60% / 80%) is required to deviate from the default growth rate a little / a lot<br>(60% of miners can enforce growth rate of 51% p.a. in agreement with [http://www.nngroup.com/articles/law-of-bandwidth Nielssen's law of internet bandwidth] or a decrease by 34% p.a., while 80% can enforce huge 10% adjustment steps per 2 weeks to be able to react to unforeseen leaps in adoption rates).

==Specification==

# Replace static 1M block size hard limit with a floating limit ("hardLimit").
# hardLimit floats within the range 1-32M, inclusive.
# Initial value of hardLimit is 1M, preserving current system.
# By default, hardLimit is increased by +1.09% every 2016 blocks
# Desired hardLimit is voted for by encoding a proposed value within a block's coinbase scriptSig.
## Votes refer to a byte value, encoded within the pattern "/B\d+[M]{0,1}/"  Uppercase suffix 'M' applies a 1,000,000x multiplier.  Example:  /B8000000/ or /B8M/ votes for a 8,000,000-byte hardLimit.
## A new hardLimit is calculated at each difficulty adjustment period (2016 blocks), and applies to the next 2016 blocks.
## Calculation:
### Absent/invalid votes are counted as votes for the default hardLimit increase. Out of range votes are counted as the nearest in-range value.
### Votes with 60% majority are limited to +/- 1.6% of the current hardLimit.
### Votes with 80% majority are limited to +/- 10% of the current hardLimit.
### Sort the votes from the previous 2,016 blocks from lowest to highest.
### The 1st raise value is defined as the 807th lowest vote from the sorted list of 2,016 votes (40th percentile).
### The 1st lower value is defined as the 1210th lowest vote from the sorted list of 2,016 votes (60th percentile).
### The 2nd raise value is defined as the 404th lowest vote from the sorted list of 2,016 votes (20th percentile).
### The 2nd lower value is defined as the 1613rd lowest vote from the sorted list of 2,016 votes (80th percentile).
### Assign temporary variable tmp = current hardLimit*1.0109
### If the 1st raise value is higher than tmp, then tmp becomes the 1st raise value, but respecting the contraint of the 60% majority vote.
### If the 2nd raise value is higher than tmp, then tmp becomes the 2nd raise value, but respecting the contraint of the 80% majority vote.
### If the 1st lower value is lower than tmp, then tmp becomes the 1st lower value, but respecting the contraint of the 60% majority vote.
### If the 2nd lower value is lower than tmp, then tmp becomes the 2nd lower value, but respecting the contraint of the 80% majority vote.
### The new hardLimit becomes tmp.

==Deployment==

# 75% rule: If 9,000 of the last 12,000 blocks are version 4 or greater, reject invalid version 4 blocks. (testnet4: 501 of last 1000)
# 95% rule ("Point of no return"): If 11,400 of the last 12,000 blocks are version 4 or greater, reject all version <= 3 blocks. (testnet4: 750 of last 1000)
# Block version number is calculated after masking out high 16 bits (final bit count TBD by versionBits outcome).

==Backward compatibility==

All older clients are not compatible with this change. The first block larger than 1M will create a network partition excluding not-upgraded network nodes and miners.

